name: Auto Build Neovim ARM64 (Latest Release)

on:
  schedule:
    - cron: '0 0 * * *'  # tiap tengah malam UTC (jam 7 pagi WIB)
  workflow_dispatch:

permissions:
  contents: write

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  build-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Get Latest Neovim Version
        id: latest
        run: |
          LATEST=$(curl -s https://api.github.com/repos/neovim/neovim/releases/latest | jq -r .tag_name)
          echo "LATEST=$LATEST" >> $GITHUB_ENV
          echo "Latest Neovim version: $LATEST"

      - name: Check if tag already exists
        run: |
          if git rev-parse "$LATEST-arm64" >/dev/null 2>&1; then
            echo "âœ… Sudah ada tag $LATEST-arm64, skip build."
            exit 0
          fi

      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Neovim (${{ env.LATEST }} ARM64)
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg NEOVIM_VERSION=$LATEST \
            --build-arg MAKEFLAGS="-j2" \
            --output type=local,dest=. \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nvim-arm64
          path: |
            nvim-arm64.tar.gz
            sha256.txt

      - name: Create & Push Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag -a "$LATEST-arm64" -m "Neovim ARM64 $LATEST (Auto Build)"
          git push origin "$LATEST-arm64"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.LATEST }}-arm64
          name: Neovim ARM64 ${{ env.LATEST }} (Auto Build)
          generate_release_notes: true
          files: |
            nvim-arm64.tar.gz
            sha256.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Telegram Notification
        if: env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != ''
        run: |
          MSG="âœ… *Neovim ARM64 $LATEST Build Selesai!*%0A
          ðŸ“¦ [Lihat Release](https://github.com/${{ github.repository }}/releases/tag/${LATEST}-arm64)%0A
          ðŸ•’ Workflow: [View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
            -d chat_id=${TELEGRAM_CHAT_ID} \
            -d parse_mode=Markdown \
            -d text="$MSG"
